/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution 
{
public:
    vector<vector<int>> zigzagLevelOrder(TreeNode* root) 
    {
        vector<vector<int>> result;
        if (root == NULL)
        {
            return result;
        }
        deque<TreeNode *> q;
        q.push_back(root);
        bool reverse = true;
        while(!q.empty())
        {
            int s = q.size();
            vector<int> vec;
            deque<TreeNode *> dq;
            for(int i = 0 ; i<s ; i++)
            {
                TreeNode* a = q.front();
                vec.push_back(a->val);
                q.pop_front();
                if(reverse == true)
                {
                    if(a->left != NULL)
                    {
                        dq.push_front(a->left);
                    }
                    if(a->right != NULL)
                    {
                        dq.push_front(a->right);
                    }
                }
                else
                {
                    if(a->right != NULL)
                    {
                        dq.push_front(a->right);
                    }
                    if(a->left != NULL)
                    {
                        dq.push_front(a->left);
                    }
                }
                
            }
            q.insert(q.begin() , dq.begin() , dq.end());
            reverse = !reverse;
            result.push_back(vec);
        }
        return result;
    }
};