/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    
    vector<vector<int>> ans;
    
    void helper(TreeNode* root, int targetSum , vector<int>& vec)
    {
        if(root == NULL)
        {
            return;
        }
        
        targetSum -= root->val;
        
        if(root->left == NULL && root->right == NULL && targetSum == 0)
        {
            vec.push_back(root->val);
            ans.push_back(vec);
            vec.pop_back();
            return;
        }
        
        vec.push_back(root->val);
        
        helper(root->left , targetSum , vec);
        helper(root->right , targetSum , vec);
        
        vec.pop_back();
        
    }
    
    vector<vector<int>> pathSum(TreeNode* root, int targetSum)
    {     
        vector<int> vec;
        
        helper(root , targetSum , vec);
        
        return ans;
    }
};